<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ZidhuXD - Projects</title>
    
    <!-- Tailwind CSS CDN for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Google Font 'Inter' for a clean, modern look -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap" rel="stylesheet">
    
    <!-- Heroicons for the GitHub star icon -->
    <script src="https://cdn.jsdelivr.net/npm/@heroicons/react@2.1.3/dist/heroicons.js"></script>

    <!-- Custom CSS for animations and overrides -->
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        /* Custom button styling from Uiverse to match portfolio */
        .button {
            line-height: 1;
            text-decoration: none;
            display: inline-flex;
            border: none;
            cursor: pointer;
            align-items: center;
            gap: 0.75rem;
            background-color: var(--clr);
            color: black;
            border-radius: 10rem;
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            padding-left: 20px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            transition: background-color 0.3s, color 0.3s;
        }

        .button__icon-wrapper {
            flex-shrink: 0;
            width: 25px;
            height: 25px;
            position: relative;
            color: var(--clr);
            background-color: #fff;
            border-radius: 50%;
            display: grid;
            place-items: center;
            overflow: hidden;
        }

        .button:hover {
            background-color: #000;
            color: white;
        }

        .button:hover .button__icon-svg {
            transform: translateX(5px);
            fill: white;
        }
        
        .button__icon-svg--copy {
            position: absolute;
            transform: translate(-150%, 150%);
        }

        .button:hover .button__icon-svg:first-child {
            transition: transform 0.3s ease-in-out;
            transform: translate(150%, -150%);
        }

        .button:hover .button__icon-svg--copy {
            transition: transform 0.3s ease-in-out 0.1s;
            transform: translate(0);
        }
        
        /* Mobile menu animation classes */
        .nav-menu-transition {
            transition: max-height 0.3s ease-in-out, opacity 0.3s ease-in-out;
        }
        .nav-menu-hidden {
            max-height: 0;
            opacity: 0;
            overflow: hidden;
        }
        .nav-menu-visible {
            max-height: 20rem; /* Adjust as needed */
            opacity: 1;
        }

        /* Custom styling for project cards */
        .project-card {
            background-color: #0d0d0d;
            border: 2px solid #333;
            border-radius: 0.75rem;
            padding: 1.5rem;
            transition: transform 0.2s ease-in-out, border-color 0.2s ease-in-out;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        
        .project-card:hover {
            transform: translateY(-5px);
            border-color: #B7F538;
        }

        .project-link {
            transition: color 0.2s;
        }

        .project-link:hover {
            color: #B7F538;
        }

        .project-details {
            font-size: 0.875rem;
            color: #a0a0a0;
        }
    </style>
</head>
<body class="bg-black text-white p-4 md:p-12 lg:p-24 min-h-screen antialiased">

    <!-- Header Section - Navigation Bar -->
    <header class="fixed top-0 left-0 right-0 z-50 bg-black bg-opacity-70 backdrop-blur-sm p-4 md:p-6">
        <nav class="w-full max-w-6xl mx-auto flex justify-between items-center">
            <a href="/" class="text-2xl font-black tracking-tighter">xD</a>
            
            <div class="flex items-center space-x-4 md:space-x-8">
                <!-- Desktop navigation links -->
                <div id="nav-menu-desktop" class="hidden md:flex space-x-4 md:space-x-8">
                    <a href="/projects" class="text-gray-400 hover:text-white transition-colors">Projects</a>
                    <a href="/#about" class="text-gray-400 hover:text-white transition-colors">About</a>
                    <a href="/#connect" class="text-gray-400 hover:text-white transition-colors">Connect</a>
                </div>
                
                <!-- "Say Hello" Button -->
                <a href="/#contact" class="button hidden md:inline-flex" style="--clr: #B7F538">
                    <span class="button__icon-wrapper">
                        <svg viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg" class="button__icon-svg" width="10">
                            <path d="M13.376 11.552l-.264-10.44-10.44-.24.024 2.28 6.96-.048L.2 12.56l1.488 1.488 9.432-9.432-.048 6.912 2.304.024z" fill="currentColor"></path>
                        </svg>
                        <svg viewBox="0 0 14 15" fill="none" width="10" xmlns="http://www.w3.org/2000/svg" class="button__icon-svg button__icon-svg--copy">
                            <path d="M13.376 11.552l-.264-10.44-10.44-.24.024 2.28 6.96-.048L.2 12.56l1.488 1.488 9.432-9.432-.048 6.912 2.304.024z" fill="currentColor"></path>
                        </svg>
                    </span>
                    Contact
                </a>

                <!-- Hamburger menu button for mobile -->
                <button id="menu-button" class="md:hidden text-white focus:outline-none" aria-label="Toggle navigation menu" aria-controls="mobile-nav-menu">
                    <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
                    </svg>
                </button>
            </div>
        </nav>
        <!-- Mobile navigation links (hidden by default) -->
        <div id="mobile-nav-menu" class="w-full mt-4 md:hidden nav-menu-transition nav-menu-hidden">
            <div class="flex flex-col items-end space-y-4">
                <a href="/projects" class="text-gray-400 hover:text-white transition-colors text-xl">Projects</a>
                <a href="/#about" class="text-gray-400 hover:text-white transition-colors text-xl">About</a>
                <a href="/#connect" class="text-gray-400 hover:text-white transition-colors text-xl">Connect</a>
            </div>
        </div>
    </header>

    <main class="w-full max-w-6xl mx-auto space-y-20 md:space-y-32 mt-20 md:mt-24">
        <!-- Projects Section Title -->
        <section class="flex flex-col items-start justify-center pt-16">
            <h1 class="text-5xl sm:text-7xl md:text-8xl font-black tracking-tight text-center md:text-left">
                My Projects
            </h1>
            <p class="text-lg md:text-xl font-medium leading-relaxed mt-4 max-w-3xl">
                Here are some of the projects I've been working on, fetched directly from my GitHub profile.
            </p>
        </section>

        <!-- Dynamic Projects Grid -->
        <section>
            <div id="projects-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 md:gap-12">
                <!-- Project cards will be injected here by JavaScript -->
                <div class="col-span-1 md:col-span-2 lg:col-span-3 text-center text-gray-400">
                    <div role="status" class="flex flex-col items-center justify-center p-4">
                        <svg aria-hidden="true" class="w-10 h-10 text-gray-200 animate-spin fill-[#B7F538]" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>
                            <path d="M93.9676 39.0409C96.3934 38.4038 97.8624 35.9472 97.0079 33.553C95.5458 29.8703 91.5471 27.5255 87.166 28.9882C84.3409 29.9329 82.5222 32.5539 82.7483 35.3405C82.9744 38.1272 84.4533 40.5842 87.0506 41.5289C89.6479 42.4736 92.5159 41.9772 93.9676 39.0409Z" fill="currentFill"/>
                        </svg>
                        <span class="mt-4 text-gray-400">Loading projects...</span>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <!-- Footer Section -->
    <footer id="contact" class="w-full max-w-6xl mx-auto flex flex-col md:flex-row justify-between items-center py-8 text-gray-500">
        <!-- Animated text for the footer -->
        <div class="flex items-center mb-4 md:mb-0 space-x-2">
            <span id="drawing-text" class="text-white text-md text-drawing-effect">Made with ❤️ by ZidhuXD.</span>
        </div>
    </footer>

    <!-- JavaScript for Dynamic Content -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const projectsGrid = document.getElementById('projects-grid');
            const githubUsername = 'zidhu-xd'; // Replace with your GitHub username

            /**
             * Fetches and displays public repositories from GitHub.
             */
            async function fetchGitHubProjects() {
                try {
                    const response = await fetch(`https://api.github.com/users/${githubUsername}/repos?sort=updated&per_page=100`);
                    if (!response.ok) {
                        throw new Error(`GitHub API error: ${response.statusText}`);
                    }
                    const repos = await response.json();
                    
                    if (repos.length === 0) {
                        projectsGrid.innerHTML = `<div class="col-span-full text-center text-gray-400">
                            No public repositories found.
                        </div>`;
                        return;
                    }

                    // Clear loading state
                    projectsGrid.innerHTML = '';

                    repos.forEach(repo => {
                        const repoCard = createRepoCard(repo);
                        projectsGrid.appendChild(repoCard);
                    });
                } catch (error) {
                    console.error("Failed to fetch GitHub projects:", error);
                    projectsGrid.innerHTML = `<div class="col-span-full text-center text-red-400">
                        Failed to load projects. Please try again later.
                    </div>`;
                }
            }

            /**
             * Creates an HTML card element for a single repository.
             * @param {object} repo - The repository object from the GitHub API.
             * @returns {HTMLElement} The created card element.
             */
            function createRepoCard(repo) {
                const card = document.createElement('div');
                card.className = 'project-card';
                
                const lastUpdatedDate = new Date(repo.pushed_at).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });

                card.innerHTML = `
                    <div>
                        <h3 class="text-2xl font-bold tracking-tight mb-2">
                            <a href="${repo.html_url}" target="_blank" class="project-link hover:underline">${repo.name}</a>
                        </h3>
                        <p class="text-gray-400 mb-4">${repo.description || 'No description provided.'}</p>
                    </div>
                    <div class="project-details flex items-center justify-between flex-wrap pt-4 border-t border-gray-700">
                        <span class="flex items-center space-x-2">
                            <span class="w-2.5 h-2.5 rounded-full" style="background-color: ${getLanguageColor(repo.language)};"></span>
                            <span class="text-gray-500">${repo.language || 'N/A'}</span>
                        </span>
                        <div class="flex items-center space-x-4">
                            <span class="flex items-center space-x-1 text-gray-500">
                                <!-- Star icon SVG -->
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4">
                                  <path fill-rule="evenodd" d="M10.868 2.884c.33-.642.177-1.423-.47-1.756a1.126 1.126 0 0 0-1.42.47L8.853 5.37a1.126 1.126 0 0 1-1.455.434L4.853 4.2c-.643-.33-1.423-.177-1.756.47a1.126 1.126 0 0 0 .47 1.42L6.37 7.146a1.126 1.126 0 0 1-.434 1.455L4.2 9.147c-.642.33-.804 1.11-.47 1.756a1.126 1.126 0 0 0 1.42.47l2.553-1.312a1.126 1.126 0 0 1 1.455-.434L9.147 11.2a1.126 1.126 0 0 0-.47 1.42c.33.642 1.11.804 1.756.47l2.553-1.312a1.126 1.126 0 0 1 1.455-.434l2.553 1.312c.642.33 1.423.177 1.756-.47a1.126 1.126 0 0 0-.47-1.42l-2.553-1.312a1.126 1.126 0 0 1 .434-1.455l1.312-2.553c.33-.642.177-1.423-.47-1.756a1.126 1.126 0 0 0-1.42-.47L12.853 5.37a1.126 1.126 0 0 1-1.455-.434L10.868 2.884Z" clip-rule="evenodd" />
                                </svg>
                                <span>${repo.stargazers_count}</span>
                            </span>
                            <span class="text-gray-500">Updated: ${lastUpdatedDate}</span>
                        </div>
                    </div>
                `;
                return card;
            }

            /**
             * Helper function to map language to a color.
             * @param {string} language - The programming language name.
             * @returns {string} The hex color code.
             */
            function getLanguageColor(language) {
                switch (language) {
                    case 'JavaScript': return '#f1e05a';
                    case 'HTML': return '#e34c26';
                    case 'CSS': return '#563d7c';
                    case 'Python': return '#3572a5';
                    case 'Java': return '#b07219';
                    case 'TypeScript': return '#3178c6';
                    case 'Vue': return '#41b883';
                    case 'React': return '#61dafb';
                    case 'C#': return '#178600';
                    case 'Go': return '#00ADD8';
                    case 'Shell': return '#89e051';
                    default: return '#808080'; // Default to gray
                }
            }

            // Mobile menu toggle logic
            const menuButton = document.getElementById('menu-button');
            const mobileNavMenu = document.getElementById('mobile-nav-menu');
            const navLinks = mobileNavMenu.querySelectorAll('a');

            function closeMenu() {
                mobileNavMenu.classList.remove('nav-menu-visible');
                mobileNavMenu.classList.add('nav-menu-hidden');
            }
            
            function openMenu() {
                mobileNavMenu.classList.remove('nav-menu-hidden');
                mobileNavMenu.classList.add('nav-menu-visible');
            }

            menuButton.addEventListener('click', () => {
                if (mobileNavMenu.classList.contains('nav-menu-hidden')) {
                    openMenu();
                } else {
                    closeMenu();
                }
            });

            navLinks.forEach(link => {
                link.addEventListener('click', () => {
                    setTimeout(closeMenu, 150);
                });
            });

            // Kick off the project fetch
            fetchGitHubProjects();
        });
    </script>
</body>
</html>
